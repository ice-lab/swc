on:
  push:
    branches:
      - 'swc\/*'

name: Build @builder/swc native binaries

env:
  NAPI_CLI_VERSION: 2.7.0
  RUST_TOOLCHAIN: nightly-2022-02-23

jobs:
  # Build binaries for publishing
  build-native:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: 'x86_64-apple-darwin'
            build: |
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc
              strip -x ./native/builder-swc.*.node
          - host: windows-latest
            build: |
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc
            target: 'x86_64-pc-windows-msvc'
          - host: windows-latest
            build: |
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc
            target: 'i686-pc-windows-msvc'
          - host: ubuntu-latest
            target: 'x86_64-unknown-linux-gnu'
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine-zig
            # Node.js in Baidu need to compatible with `GLIBC_2.12`
            build: >-
              set -e &&
              rustup toolchain install "${RUST_TOOLCHAIN}" &&
              rustup default "${RUST_TOOLCHAIN}" &&
              rustup target add x86_64-unknown-linux-gnu &&
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc -- --release --target x86_64-unknown-linux-gnu --zig --zig-abi-suffix 2.12
              llvm-strip -x ./native/builder-swc.*.node
          - host: ubuntu-latest
            target: 'x86_64-unknown-linux-musl'
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: >-
              set -e &&
              rustup toolchain install "${RUST_TOOLCHAIN}" &&
              rustup default "${RUST_TOOLCHAIN}" &&
              rustup target add x86_64-unknown-linux-musl &&
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc -- --release --target x86_64-unknown-linux-musl
              strip -x ./native/builder-swc.*.node
          - host: macos-latest
            target: 'aarch64-apple-darwin'
            build: |
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc -- --release --target aarch64-apple-darwin
              strip -x ./native/builder-swc.*.node
          - host: ubuntu-latest
            target: 'aarch64-unknown-linux-gnu'
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine-zig
            build: >-
              set -e &&
              rustup toolchain install "${RUST_TOOLCHAIN}" &&
              rustup default "${RUST_TOOLCHAIN}" &&
              rustup target add aarch64-unknown-linux-gnu &&
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc -- --release --target aarch64-unknown-linux-gnu --zig --zig-abi-suffix 2.12 &&
              llvm-strip -x ./native/builder-swc.*.node
          - host: ubuntu-latest
            target: 'aarch64-unknown-linux-musl'
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: >-
              set -e &&
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              rustup toolchain install "${RUST_TOOLCHAIN}" &&
              rustup default "${RUST_TOOLCHAIN}" &&
              rustup target add aarch64-unknown-linux-musl &&
              npm run build:swc -- --release --target aarch64-unknown-linux-musl &&
              llvm-strip -x ./native/builder-swc.*.node
          - host: windows-latest
            target: 'aarch64-pc-windows-msvc'
            build: |
              npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}"
              npm run build:swc -- --release --target aarch64-pc-windows-msvc
    steps:
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: builder-swc-binaries
          path: ./native/builder-swc.${{ matrix.name }}.node
      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
  commit:
    needs: build-native
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2.0.10
        with:
          name: builder-swc-binaries
          path: ./native
      - uses: EndBug/add-and-commit@v7
        with:
          add: './native --force'
          message: 'Build @builder/swc binaries'
